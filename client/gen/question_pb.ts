// @generated by protoc-gen-es v2.2.3 with parameter "target=ts"
// @generated from file question.proto (package questsearch.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import { fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file question.proto.
 */
export const file_question: GenFile = /*@__PURE__*/
  fileDesc("Cg5xdWVzdGlvbi5wcm90bxIOcXVlc3RzZWFyY2gudjEiSQoNU2VhcmNoUmVxdWVzdBINCgVxdWVyeRgBIAEoCRIMCgRwYWdlGAIgASgFEg0KBWxpbWl0GAMgASgFEgwKBHR5cGUYBCABKAkiPQoFQmxvY2sSDAoEdGV4dBgBIAEoCRIUCgxzaG93SW5PcHRpb24YAiABKAgSEAoIaXNBbnN3ZXIYAyABKAgiLwoGT3B0aW9uEgwKBHRleHQYASABKAkSFwoPaXNDb3JyZWN0QW5zd2VyGAIgASgIIr0BCghRdWVzdGlvbhIKCgJpZBgBIAEoCRIMCgR0eXBlGAIgASgJEg0KBXRpdGxlGAMgASgJEhMKC2FuYWdyYW1UeXBlGAQgASgJEiUKBmJsb2NrcxgFIAMoCzIVLnF1ZXN0c2VhcmNoLnYxLkJsb2NrEicKB29wdGlvbnMYBiADKAsyFi5xdWVzdHNlYXJjaC52MS5PcHRpb24SEAoIc29sdXRpb24YByABKAkSEQoJc2libGluZ0lkGAggASgJIlIKDlNlYXJjaFJlc3BvbnNlEisKCXF1ZXN0aW9ucxgBIAMoCzIYLnF1ZXN0c2VhcmNoLnYxLlF1ZXN0aW9uEhMKC3RvdGFsX2NvdW50GAIgASgFMlwKD1F1ZXN0aW9uU2VydmljZRJJCgZTZWFyY2gSHS5xdWVzdHNlYXJjaC52MS5TZWFyY2hSZXF1ZXN0Gh4ucXVlc3RzZWFyY2gudjEuU2VhcmNoUmVzcG9uc2UiAGIGcHJvdG8z");

/**
 * @generated from message questsearch.v1.SearchRequest
 */
export type SearchRequest = Message<"questsearch.v1.SearchRequest"> & {
  /**
   * @generated from field: string query = 1;
   */
  query: string;

  /**
   * @generated from field: int32 page = 2;
   */
  page: number;

  /**
   * @generated from field: int32 limit = 3;
   */
  limit: number;

  /**
   * Optional filter by question type
   *
   * @generated from field: string type = 4;
   */
  type: string;
};

/**
 * Describes the message questsearch.v1.SearchRequest.
 * Use `create(SearchRequestSchema)` to create a new message.
 */
export const SearchRequestSchema: GenMessage<SearchRequest> = /*@__PURE__*/
  messageDesc(file_question, 0);

/**
 * @generated from message questsearch.v1.Block
 */
export type Block = Message<"questsearch.v1.Block"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: bool showInOption = 2;
   */
  showInOption: boolean;

  /**
   * @generated from field: bool isAnswer = 3;
   */
  isAnswer: boolean;
};

/**
 * Describes the message questsearch.v1.Block.
 * Use `create(BlockSchema)` to create a new message.
 */
export const BlockSchema: GenMessage<Block> = /*@__PURE__*/
  messageDesc(file_question, 1);

/**
 * @generated from message questsearch.v1.Option
 */
export type Option = Message<"questsearch.v1.Option"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: bool isCorrectAnswer = 2;
   */
  isCorrectAnswer: boolean;
};

/**
 * Describes the message questsearch.v1.Option.
 * Use `create(OptionSchema)` to create a new message.
 */
export const OptionSchema: GenMessage<Option> = /*@__PURE__*/
  messageDesc(file_question, 2);

/**
 * @generated from message questsearch.v1.Question
 */
export type Question = Message<"questsearch.v1.Question"> & {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string type = 2;
   */
  type: string;

  /**
   * @generated from field: string title = 3;
   */
  title: string;

  /**
   * @generated from field: string anagramType = 4;
   */
  anagramType: string;

  /**
   * @generated from field: repeated questsearch.v1.Block blocks = 5;
   */
  blocks: Block[];

  /**
   * @generated from field: repeated questsearch.v1.Option options = 6;
   */
  options: Option[];

  /**
   * @generated from field: string solution = 7;
   */
  solution: string;

  /**
   * @generated from field: string siblingId = 8;
   */
  siblingId: string;
};

/**
 * Describes the message questsearch.v1.Question.
 * Use `create(QuestionSchema)` to create a new message.
 */
export const QuestionSchema: GenMessage<Question> = /*@__PURE__*/
  messageDesc(file_question, 3);

/**
 * @generated from message questsearch.v1.SearchResponse
 */
export type SearchResponse = Message<"questsearch.v1.SearchResponse"> & {
  /**
   * @generated from field: repeated questsearch.v1.Question questions = 1;
   */
  questions: Question[];

  /**
   * @generated from field: int32 total_count = 2;
   */
  totalCount: number;
};

/**
 * Describes the message questsearch.v1.SearchResponse.
 * Use `create(SearchResponseSchema)` to create a new message.
 */
export const SearchResponseSchema: GenMessage<SearchResponse> = /*@__PURE__*/
  messageDesc(file_question, 4);

/**
 * @generated from service questsearch.v1.QuestionService
 */
export const QuestionService: GenService<{
  /**
   * @generated from rpc questsearch.v1.QuestionService.Search
   */
  search: {
    methodKind: "unary";
    input: typeof SearchRequestSchema;
    output: typeof SearchResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_question, 0);

